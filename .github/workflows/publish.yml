name: Publish release artifacts

env:
  module_id: BetterSongSearch
  qmodName: BetterSongSearch
  cache-name: BSS_release_cache

on:
  push:
    tags:
      - "v*.*.*-bs-*.*.*"

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get Mod and game version from tag name
      id: modversion
      run: |
        TEMP=$(echo "$GITHUB_REF_NAME" | grep -Po "(?<=v)\d+.\d+.\d+")
        echo "VERSION=$TEMP" >> $GITHUB_ENV
        TEMP=$(echo "$GITHUB_REF_NAME" | grep -Po "(?<=bs-)[.\d_]*")
        echo "BS_VERSION=$TEMP" >> $GITHUB_ENV

    - uses: actions/checkout@v3
      name: Checkout
      with:
        submodules: true
        lfs: true

    - uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Create ndkpath.txt
      run: |
        echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
        cat ${GITHUB_WORKSPACE}/ndkpath.txt

    - name: Get QPM rust
      uses: Fernthedev/qpm-rust-action@main
      with:
        #required
        workflow_token: ${{secrets.GITHUB_TOKEN}}

        restore: true # will run restore on download
        cache: true #will cache dependencies
    
    - name: QPM Edit Version
      run: |
        ./QPM/qpm-rust package edit --version "${{ env.VERSION }}"
    
    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}
        pwsh -Command ./build.ps1
        ./QPM/qpm-rust qmod build

    - name: Create Qmod
      run: |
        pwsh -Command ./createqmod.ps1 ${{env.qmodName}}

    - name: Get Library Name
      id: libname
      run: |
        cd ./build/
        pattern="lib${module_id}*.so"
        files=( $pattern )
        echo "LIBNAME=${files[0]}" >> $GITHUB_ENV

    - name: Rename debug file
      run: mv "./build/debug/${{ env.LIBNAME }}" "./build/debug/debug_${{ env.LIBNAME }}"

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ./${{ env.qmodName }}.qmod
          ./build/${{ env.LIBNAME }}
          ./build/debug/debug_${{ env.LIBNAME }}